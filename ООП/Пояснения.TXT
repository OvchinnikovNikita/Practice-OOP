main.cpp – файл с кодом. 
input.txt – файл, с которого программа считывает граф (для Флойда – Уоршалла и Джонсона граф представляется в виде матрицы смежности. Для поиска шарниров граф представляется в виде списка соседей). Input.txt должен находиться в одной директории с файлом main.cpp, иначе main.cpp его не увидит.

Представление графов.txt – файл с матрицами и списком смежности. Удобно копировать и вставлять в input.txt. Все графы пронумерованы и нарисованы в соответствующих png файлах. 
 

Все алгоритмы, которые я реализовывал, я писал в отдельный класс, поэтому кода много, но большинство из алгоритмов вы уже проверили. 
Алгоритмы, которые вы ещё не смотрели, находятся начиная с 477 строки, а основная функция main() находится в самом низу. Именно там располагаются блоки кода, которые придется комментировать и раскомментировать. Всё описано ниже
----
Сначала идёт Флойд – Уоршалл. Граф (под номером 1) для него уже вписана в input.txt. При желании этот алгоритм можно прогнать на графе (2), который является графом с отрицательными весами без отрицательных циклов. В первую очередь граф (2) предназначается для демонстрации работы алгоритма Джонсона, однако Флойд – Уоршалл тоже прекрасно на нём работает. 
В аргументах метода Флойда – Уоршалла нужно указать стартовую и конечную вершину, алгоритм найдет кратчайший путь и выведет его.
----
Далее идет алгоритм Джонсона. Для его работы нужно закомментировать блок Флойда – Уоршалла, и раскомментировать блок Джонсона. Вставить в input.txt второй граф (он имеет отрицательные веса).  В аргументе метода класса указать стартовую точку, алгоритм найдет кратчайшее расстояние от указанной точки до всех остальных точек.
----
Далее – поиск шарниров. Аналогичны предыдущим действиям, раскомментировать блок 3, закомментировать прошлый. Поменять матрицу (2) на список соседей (3). Алгоритм найдет шарниры графа. Точка 0 указывается в методе поиска шарниров как отправная точка для работы поиска в глубину, который используется в алгоритме поиска шарниров. 
Проверял корректность работы много раз – всё работает, ошибок никаких не заметил. Если что-то по каким-то причинам не компилируется, могу показать работу алгоритмов на паре (или в другое время, когда вам будет удобно). 




 
  

